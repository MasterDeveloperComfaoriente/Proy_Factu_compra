#-------------------------------------------------------------------------------
# File: consultarArchivos2.4gl
# GENERATED BY fglwsdl 1558429324
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------


IMPORT FGL WSHelper
IMPORT com
IMPORT xml
IMPORT security
IMPORT os


GLOBALS "consultarArchivos.inc"



#-------------------------------------------------------------------------------
# Service: consultarArchivos
# Port:    ConsultarArchivosPort
# Server:  https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos
#-------------------------------------------------------------------------------

PRIVATE DEFINE consultarArchivosHTTPReq     com.HTTPRequest
PRIVATE DEFINE consultarArchivosHTTPResp    com.HTTPResponse

PRIVATE DEFINE consultarRegistrosIAHTTPReq     com.HTTPRequest
PRIVATE DEFINE consultarRegistrosIAHTTPResp    com.HTTPResponse

PRIVATE DEFINE borrarRegistrosIAHTTPReq     com.HTTPRequest
PRIVATE DEFINE borrarRegistrosIAHTTPResp    com.HTTPResponse

PRIVATE DEFINE ConsultarRegistrosIAManualHTTPReq     com.HTTPRequest
PRIVATE DEFINE ConsultarRegistrosIAManualHTTPResp    com.HTTPResponse

#-------------------------------------------------------------------------------

#
# Operation: consultarArchivos
#
#
# FUNCTION: consultarArchivos_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL consultarArchivos
#   OUTPUT: GLOBAL consultarArchivosResponse
#
FUNCTION consultarArchivos_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE fault      BOOLEAN
  DEFINE nb         INTEGER
  DEFINE uri        STRING
  DEFINE setcookie  STRING
  DEFINE mustUnderstand INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
  DEFINE ok         INTEGER

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
  LET fault = FALSE
  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")

  IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
    LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(request, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL request.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL request.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL request.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL request.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL request.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL request.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(consultarArchivos,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = response.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(response, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)

      CASE
        WHEN response.getStatusCode()==200 OR response.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,consultarArchivosResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        WHEN response.getStatusCode()==401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN response.getStatusCode()==407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION consultarArchivosRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE nb         INTEGER
  DEFINE writer     xml.StaxWriter
  DEFINE ok         INTEGER

  #
  # CHECK PREVIOUS CALL  
  #
  IF consultarArchivosHTTPReq IS NOT NULL AND consultarArchivosHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
      LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET consultarArchivosHTTPReq = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL consultarArchivosHTTPReq.setMethod("POST")
    CALL consultarArchivosHTTPReq.setCharset("UTF-8")
    CALL consultarArchivosHTTPReq.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(consultarArchivosHTTPReq, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL consultarArchivosHTTPReq.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL consultarArchivosHTTPReq.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL consultarArchivosHTTPReq.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL consultarArchivosHTTPReq.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL consultarArchivosHTTPReq.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL consultarArchivosHTTPReq.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET consultarArchivosHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = consultarArchivosHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(consultarArchivos,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL consultarArchivosHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET consultarArchivosHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET consultarArchivosHTTPResp = consultarArchivosHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET consultarArchivosHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION consultarArchivosResponse_g()
  DEFINE wsstatus        INTEGER
  DEFINE fault           BOOLEAN
  DEFINE nb              INTEGER
  DEFINE uri             STRING
  DEFINE setcookie       STRING
  DEFINE mustUnderstand  INTEGER
  DEFINE reader          xml.StaxReader
  DEFINE ok              INTEGER

  LET fault = FALSE
  LET wsstatus = -1

  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")
  #
  # CHECK PREVIOUS CALL  
  #
  IF consultarArchivosHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF consultarArchivosHTTPResp IS NULL THEN
      # Still no response, try again
      LET consultarArchivosHTTPResp = consultarArchivosHTTPReq.getAsyncResponse()
    END IF

    IF consultarArchivosHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = consultarArchivosHTTPResp.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(consultarArchivosHTTPResp, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)
      CASE
        WHEN consultarArchivosHTTPResp.getStatusCode()==200 OR consultarArchivosHTTPResp.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = consultarArchivosHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,consultarArchivosResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL consultarArchivosHTTPResp.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||consultarArchivosHTTPResp.getStatusCode()||" ("||consultarArchivosHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET consultarArchivosHTTPReq = NULL
  LET consultarArchivosHTTPResp = NULL
  RETURN wsstatus

END FUNCTION



#
# Operation: consultarRegistrosIA
#
#
# FUNCTION: consultarRegistrosIA_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL consultarRegistrosIA
#   OUTPUT: GLOBAL consultarRegistrosIAResponse
#
FUNCTION consultarRegistrosIA_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE fault      BOOLEAN
  DEFINE nb         INTEGER
  DEFINE uri        STRING
  DEFINE setcookie  STRING
  DEFINE mustUnderstand INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
  DEFINE ok         INTEGER

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
  LET fault = FALSE
  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")

  IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
    LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(request, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL request.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL request.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL request.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL request.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL request.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL request.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(consultarRegistrosIA,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = response.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(response, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)

      CASE
        WHEN response.getStatusCode()==200 OR response.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,consultarRegistrosIAResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        WHEN response.getStatusCode()==401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN response.getStatusCode()==407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION consultarRegistrosIARequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE nb         INTEGER
  DEFINE writer     xml.StaxWriter
  DEFINE ok         INTEGER

  #
  # CHECK PREVIOUS CALL  
  #
  IF consultarRegistrosIAHTTPReq IS NOT NULL AND consultarRegistrosIAHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
      LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET consultarRegistrosIAHTTPReq = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL consultarRegistrosIAHTTPReq.setMethod("POST")
    CALL consultarRegistrosIAHTTPReq.setCharset("UTF-8")
    CALL consultarRegistrosIAHTTPReq.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(consultarRegistrosIAHTTPReq, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL consultarRegistrosIAHTTPReq.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL consultarRegistrosIAHTTPReq.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL consultarRegistrosIAHTTPReq.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL consultarRegistrosIAHTTPReq.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL consultarRegistrosIAHTTPReq.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL consultarRegistrosIAHTTPReq.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET consultarRegistrosIAHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = consultarRegistrosIAHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(consultarRegistrosIA,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL consultarRegistrosIAHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET consultarRegistrosIAHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET consultarRegistrosIAHTTPResp = consultarRegistrosIAHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET consultarRegistrosIAHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION consultarRegistrosIAResponse_g()
  DEFINE wsstatus        INTEGER
  DEFINE fault           BOOLEAN
  DEFINE nb              INTEGER
  DEFINE uri             STRING
  DEFINE setcookie       STRING
  DEFINE mustUnderstand  INTEGER
  DEFINE reader          xml.StaxReader
  DEFINE ok              INTEGER

  LET fault = FALSE
  LET wsstatus = -1

  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")
  #
  # CHECK PREVIOUS CALL  
  #
  IF consultarRegistrosIAHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF consultarRegistrosIAHTTPResp IS NULL THEN
      # Still no response, try again
      LET consultarRegistrosIAHTTPResp = consultarRegistrosIAHTTPReq.getAsyncResponse()
    END IF

    IF consultarRegistrosIAHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = consultarRegistrosIAHTTPResp.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(consultarRegistrosIAHTTPResp, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)
      CASE
        WHEN consultarRegistrosIAHTTPResp.getStatusCode()==200 OR consultarRegistrosIAHTTPResp.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = consultarRegistrosIAHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,consultarRegistrosIAResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL consultarRegistrosIAHTTPResp.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||consultarRegistrosIAHTTPResp.getStatusCode()||" ("||consultarRegistrosIAHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET consultarRegistrosIAHTTPReq = NULL
  LET consultarRegistrosIAHTTPResp = NULL
  RETURN wsstatus

END FUNCTION



#
# Operation: borrarRegistrosIA
#
#
# FUNCTION: borrarRegistrosIA_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL borrarRegistrosIA
#   OUTPUT: GLOBAL borrarRegistrosIAResponse
#
FUNCTION borrarRegistrosIA_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE fault      BOOLEAN
  DEFINE nb         INTEGER
  DEFINE uri        STRING
  DEFINE setcookie  STRING
  DEFINE mustUnderstand INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
  DEFINE ok         INTEGER

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
  LET fault = FALSE
  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")

  IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
    LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(request, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL request.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL request.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL request.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL request.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL request.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL request.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(borrarRegistrosIA,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = response.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(response, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)

      CASE
        WHEN response.getStatusCode()==200 OR response.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,borrarRegistrosIAResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        WHEN response.getStatusCode()==401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN response.getStatusCode()==407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION borrarRegistrosIARequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE nb         INTEGER
  DEFINE writer     xml.StaxWriter
  DEFINE ok         INTEGER

  #
  # CHECK PREVIOUS CALL  
  #
  IF borrarRegistrosIAHTTPReq IS NOT NULL AND borrarRegistrosIAHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
      LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET borrarRegistrosIAHTTPReq = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL borrarRegistrosIAHTTPReq.setMethod("POST")
    CALL borrarRegistrosIAHTTPReq.setCharset("UTF-8")
    CALL borrarRegistrosIAHTTPReq.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(borrarRegistrosIAHTTPReq, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL borrarRegistrosIAHTTPReq.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL borrarRegistrosIAHTTPReq.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL borrarRegistrosIAHTTPReq.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL borrarRegistrosIAHTTPReq.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL borrarRegistrosIAHTTPReq.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL borrarRegistrosIAHTTPReq.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET borrarRegistrosIAHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = borrarRegistrosIAHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(borrarRegistrosIA,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL borrarRegistrosIAHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET borrarRegistrosIAHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET borrarRegistrosIAHTTPResp = borrarRegistrosIAHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET borrarRegistrosIAHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION borrarRegistrosIAResponse_g()
  DEFINE wsstatus        INTEGER
  DEFINE fault           BOOLEAN
  DEFINE nb              INTEGER
  DEFINE uri             STRING
  DEFINE setcookie       STRING
  DEFINE mustUnderstand  INTEGER
  DEFINE reader          xml.StaxReader
  DEFINE ok              INTEGER

  LET fault = FALSE
  LET wsstatus = -1

  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")
  #
  # CHECK PREVIOUS CALL  
  #
  IF borrarRegistrosIAHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF borrarRegistrosIAHTTPResp IS NULL THEN
      # Still no response, try again
      LET borrarRegistrosIAHTTPResp = borrarRegistrosIAHTTPReq.getAsyncResponse()
    END IF

    IF borrarRegistrosIAHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = borrarRegistrosIAHTTPResp.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(borrarRegistrosIAHTTPResp, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)
      CASE
        WHEN borrarRegistrosIAHTTPResp.getStatusCode()==200 OR borrarRegistrosIAHTTPResp.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = borrarRegistrosIAHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,borrarRegistrosIAResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL borrarRegistrosIAHTTPResp.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||borrarRegistrosIAHTTPResp.getStatusCode()||" ("||borrarRegistrosIAHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET borrarRegistrosIAHTTPReq = NULL
  LET borrarRegistrosIAHTTPResp = NULL
  RETURN wsstatus

END FUNCTION



#
# Operation: ConsultarRegistrosIAManual
#
#
# FUNCTION: ConsultarRegistrosIAManual_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL ConsultarRegistrosIAManual
#   OUTPUT: GLOBAL ConsultarRegistrosIAManualResponse
#
FUNCTION ConsultarRegistrosIAManual_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE fault      BOOLEAN
  DEFINE nb         INTEGER
  DEFINE uri        STRING
  DEFINE setcookie  STRING
  DEFINE mustUnderstand INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
  DEFINE ok         INTEGER

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
  LET fault = FALSE
  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")

  IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
    LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(request, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL request.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL request.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL request.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL request.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL request.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL request.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(ConsultarRegistrosIAManual,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = response.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(response, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)

      CASE
        WHEN response.getStatusCode()==200 OR response.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,ConsultarRegistrosIAManualResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        WHEN response.getStatusCode()==401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN response.getStatusCode()==407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION ConsultarRegistrosIAManualRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE nb         INTEGER
  DEFINE writer     xml.StaxWriter
  DEFINE ok         INTEGER

  #
  # CHECK PREVIOUS CALL  
  #
  IF ConsultarRegistrosIAManualHTTPReq IS NOT NULL AND ConsultarRegistrosIAManualHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri IS NULL THEN
      LET consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri = "https://consultarpdfxmlfactura.dispafel.com:443/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET ConsultarRegistrosIAManualHTTPReq = com.HTTPRequest.Create(consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
    CALL ConsultarRegistrosIAManualHTTPReq.setMethod("POST")
    CALL ConsultarRegistrosIAManualHTTPReq.setCharset("UTF-8")
    CALL ConsultarRegistrosIAManualHTTPReq.setHeader("SOAPAction","\"\"")
    CALL WSHelper_SetRequestHeaders(ConsultarRegistrosIAManualHTTPReq, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Request.Headers)
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version IS NOT NULL THEN
      CALL ConsultarRegistrosIAManualHTTPReq.setVersion(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Version)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie IS NOT NULL THEN
      CALL ConsultarRegistrosIAManualHTTPReq.setHeader("Cookie",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout <> 0 THEN
      CALL ConsultarRegistrosIAManualHTTPReq.setConnectionTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ConnectionTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout <> 0 THEN
      CALL ConsultarRegistrosIAManualHTTPReq.setTimeout(consultarArchivos_ConsultarArchivosPortEndpoint.Binding.ReadWriteTimeout)
    END IF
    IF consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest IS NOT NULL THEN
      CALL ConsultarRegistrosIAManualHTTPReq.setHeader("Content-Encoding",consultarArchivos_ConsultarArchivosPortEndpoint.Binding.CompressRequest)
    END IF
    CALL ConsultarRegistrosIAManualHTTPReq.setHeader("Accept-Encoding","gzip, deflate")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET ConsultarRegistrosIAManualHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = ConsultarRegistrosIAManualHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      #
      # STAX SOAP REQUEST SERIALIZE
      #
      CALL xml.Serializer.VariableToStax(ConsultarRegistrosIAManual,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL ConsultarRegistrosIAManualHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET ConsultarRegistrosIAManualHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET ConsultarRegistrosIAManualHTTPResp = ConsultarRegistrosIAManualHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET ConsultarRegistrosIAManualHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION ConsultarRegistrosIAManualResponse_g()
  DEFINE wsstatus        INTEGER
  DEFINE fault           BOOLEAN
  DEFINE nb              INTEGER
  DEFINE uri             STRING
  DEFINE setcookie       STRING
  DEFINE mustUnderstand  INTEGER
  DEFINE reader          xml.StaxReader
  DEFINE ok              INTEGER

  LET fault = FALSE
  LET wsstatus = -1

  LET uri = com.WebServiceEngine.GetOption("SoapModuleURI")
  #
  # CHECK PREVIOUS CALL  
  #
  IF ConsultarRegistrosIAManualHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF ConsultarRegistrosIAManualHTTPResp IS NULL THEN
      # Still no response, try again
      LET ConsultarRegistrosIAManualHTTPResp = ConsultarRegistrosIAManualHTTPReq.getAsyncResponse()
    END IF

    IF ConsultarRegistrosIAManualHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      #
      # RETRIEVE SERVICE SESSION COOKIE
      #
      LET setcookie = ConsultarRegistrosIAManualHTTPResp.getHeader("Set-Cookie")
      IF setcookie IS NOT NULL THEN
        LET consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Cookie = WSHelper_ExtractServerCookie(setcookie,consultarArchivos_ConsultarArchivosPortEndpoint.Address.Uri)
      END IF

      #
      # RETRIEVE HTTP RESPONSE Headers
      #
      CALL WSHelper_SetResponseHeaders(ConsultarRegistrosIAManualHTTPResp, consultarArchivos_ConsultarArchivosPortEndpoint.Binding.Response.Headers)
      CASE
        WHEN ConsultarRegistrosIAManualHTTPResp.getStatusCode()==200 OR ConsultarRegistrosIAManualHTTPResp.getStatusCode()==500
          #
          # STAX SOAP RESPONSE OR FAULT
          #
          LET reader = ConsultarRegistrosIAManualHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          # Process SOAP headers 
          LET nb = 0
          IF WSHelper_CheckStaxSOAP11Header(reader) AND NOT reader.isEmptyElement() THEN
            CALL reader.nextTag()
            WHILE (reader.getEventType()=="START_ELEMENT")
              IF WSHelper_CheckStaxSOAP11HeaderActor(reader,uri) THEN
                LET mustUnderstand = WSHelper_GetStaxSOAP11HeaderMustUnderstand(reader)
                IF mustUnderstand = -1 THEN
                  CALL WSHelper_FillSOAP11WSError("Client","Invalid mustUnderstand value")
                  EXIT CASE
                END IF
                #
                # STAX SOAP RESPONSE HEADER DESERIALIZE
                #
                IF mustUnderstand THEN
                  CALL WSHelper_FillSOAP11WSError("MustUnderstand","Mandatory header block not understood")
                  EXIT CASE
                ELSE
                  CALL reader.nextSibling() # Skip header, not necessary
                END IF
              ELSE
                CALL reader.nextSibling() # Skip header, not intended to us
              END IF
            END WHILE
            IF NOT WSHelper_CheckStaxSOAP11Header(reader) THEN
              CALL WSHelper_FillSOAP11WSError("Client","No ending header tag found")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          ELSE
            IF reader.isEmptyElement() THEN
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11StartFault(reader) THEN # Handle SOAP Fault
            LET fault = TRUE
            CALL reader.nextTag()
            IF NOT WSHelper_ReadStaxSOAP11FaultUntilDetail(reader) THEN
              EXIT CASE
            END IF
            IF WSHelper_CheckStaxSOAP11FaultDetail(reader) THEN
              #
              # STAX SOAP FAULT DESERIALIZE
              #
              CALL reader.nextSibling() # Skip SOAP detail
            END IF
            IF NOT WSHelper_ReadStaxSOAP11EndFault(reader) THEN
              EXIT CASE
            END IF
          ELSE # Handle SOAP Response
            IF nb != 0 THEN # Check mandatory headers
              CALL WSHelper_FillSOAP11WSError("Client","Headers are missing")
              EXIT CASE
            END IF
            IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
              EXIT CASE
            END IF
            #
            # STAX SOAP RESPONSE DESERIALIZE
            #
            CALL xml.Serializer.StaxToVariable(reader,ConsultarRegistrosIAManualResponse)
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL ConsultarRegistrosIAManualHTTPResp.endXmlResponse(reader)
          IF NOT fault THEN
            LET wsstatus = 0
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||ConsultarRegistrosIAManualHTTPResp.getStatusCode()||" ("||ConsultarRegistrosIAManualHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET ConsultarRegistrosIAManualHTTPReq = NULL
  LET ConsultarRegistrosIAManualHTTPResp = NULL
  RETURN wsstatus

END FUNCTION


